---
import { getCollection, render } from "astro:content";
import { getEntry } from "astro:content";
import Page from "@layouts/Page.astro";
import MarkdownIt from "markdown-it";
const parser = new MarkdownIt();

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const posts = await getCollection("lnlsrd");
  return posts.map((post) => ({
    params: { id: post.id },
    props: { post },
  }));
}
// 2. For your template, you can get the entry directly from the prop
const { post } = Astro.props;
const { Content } = await render(post);

const TocEntry = await getEntry("lnlsrd", "sisällysluettelo");

if (!TocEntry) throw new Error('No entry found for "sisällysluettelo"');

const rawContent = TocEntry.body;

// Lets go through each link [text](something/something) in the raw content, and add a prefix '/letl/srd/' to the href
// also, convert to lowercase
const content =
  rawContent?.replace(/\[(.*?)\]\((.*?)\)/g, (match, p1, p2) => {
    return `[${p1}](/letl/srd/${p2.toLowerCase()})`;
  }) ?? "";

// Remove the first line, which is the title
const contentWithoutTitle = content.split("\n").slice(1).join("\n");

const tocContent = parser.render(contentWithoutTitle);
---
<Page title="SRD">
  <main class="content-grid theme-letl">
    <section class="golden-col">
      <article>
        <Content />
      </article>
      <article>
        <h1>
          <a href="/letl/srd/readme">L&L SRD</a>
        </h1>
        <div class="toc" set:html={tocContent} />
      </article>
    </section>
  </main>
</Page>
