---
import { Image } from "astro:assets";
import LetlContent from "./LetlContent.astro";
import LetlIntro from "./LetlIntro.md";
import LetlProductList from "./LetlProductList.md";
---

<LetlContent>
  <section class="letl-section surface">
    <Image
      src="/letl/basiliski.webp"
      class="basilisk"
      alt=""
      width={1024}
      height={724}
      widths={[696, 1024]}
      format="webp"
      loading="lazy"
    />
    <article>
      <h1>Legendoja & lohikäärmeitä</h1>
      <div class="two-col">
        <div>
          <LetlIntro />
        </div>
        <div>
          <LetlProductList />
        </div>
      </div>
    </article>
    <div class="cta">
      <a href="/letl" class="button">Lue lisää</a>
    </div>
  </section>
</LetlContent>

<style>
  /* Section needs to be positioned for absolute children */
  .letl-section {
    position: relative;
    overflow: hidden; /* Prevent image from breaking out of container */
  }

  /* Basilisk background image */
  .basilisk,
  .basilisk img {
    position: absolute;
    z-index: 0;
    pointer-events: none;

    /* Mobile: hidden completely */
    display: none;
  }

  /* Content should be above the image */
  .letl-section > article,
  .letl-section > div.cta {
    position: relative;
    z-index: 10;
  }

  /* CTA container */
  div.cta {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    padding: var(--grid) 0;
  }

  /* Tablet and Desktop: show, flip and position at bottom-left */
  @media (min-width: 640px) {
    .basilisk,
    .basilisk img {
      display: block;
      transform: scaleX(-1); /* Flip horizontally */
      width: auto;
      height: calc(var(--grid) * 28);
      top: auto;
      bottom: calc(var(--grid) * -3);
      left: calc(var(--grid) * -6);
      right: auto;
      opacity: 0.9;
    }

    div.cta {
      min-height: calc(var(--grid) * 5);
    }
  }

  /* Desktop: larger size and adjusted position */
  @media (min-width: 1024px) {
    .basilisk {
      height: calc(var(--grid) * 35);
      bottom: calc(var(--grid) * -5);
      left: calc(var(--grid) * -8);
      opacity: 1;
    }

    div.cta {
      min-height: calc(var(--grid) * 6);
    }
  }
</style>
